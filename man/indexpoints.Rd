% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PROXIMITY_FUNCTIONS.R
\name{indexpoints}
\alias{indexpoints}
\title{Utility to create efficient quadtree spatial index of any set of lat,lon}
\usage{
indexpoints(pts, indexname = "custom_index", envir = globalenv())
}
\arguments{
\item{pts}{a data.frame or data.table with columns name lat and lon,
one row per location (point), and any other columns are ignored.}

\item{indexname}{optional name to give the index}

\item{envir}{optional environment - default is to assign index object to globalenv()}
}
\value{
Just returns TRUE when done. Side effect is to
put into the globalenv()
(or specified envir) that spatial index with name defined by indexname,
as created by \code{\link[=indexpoints]{indexpoints()}}.
}
\description{
Index a list of points (e.g., schools)
so \code{\link[=getpointsnearby]{getpointsnearby()}} can find them very quickly
}
\details{
This creates a spatial index
to be used by \code{\link[=getpointsnearby]{getpointsnearby()}} to support \code{\link[=proxistat]{proxistat()}},
to create a new proximity score for every block and block group in the US.
It relies on \code{\link[=create_quaddata]{create_quaddata()}} for one step, then \code{\link[SearchTrees:createTree]{SearchTrees::createTree()}}
}
\examples{
\dontrun{
  # EXAMPLES NOT TESTED YET ***
  pts <- testpoints_10
  tempenv <- new.env()
  index10 <- indexpoints(pts, "index10", envir = tempenv)
  x <- getpointsnearby(pts, quadtree = get(index10, envir = tempenv))
  # y <- proxistat(pts)
  # rm(custom_index)
 }

}
\keyword{internal}
